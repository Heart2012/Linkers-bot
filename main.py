import os
import json
import asyncio
from aiogram import Bot, Dispatcher, types

# -------------------- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ --------------------
API_TOKEN = os.getenv("API_TOKEN")
OUTPUT_CHANNEL_ID = int(os.getenv("OUTPUT_CHANNEL_ID"))
LINKS_FILE = "links.json"

if not API_TOKEN or not OUTPUT_CHANNEL_ID:
    print("‚ùå –û—à–∏–±–∫–∞: –Ω–µ –∑–∞–¥–∞–Ω—ã API_TOKEN –∏–ª–∏ OUTPUT_CHANNEL_ID")
    exit(1)

bot = Bot(token=API_TOKEN)
dp = Dispatcher()  # aiogram 3.x

# -------------------- –°–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤ --------------------
CHANNELS = [
    {"name": "‚ö†Ô∏è –û–ü–ï–†–ê–¢–ò–í–ù–Ü –ù–û–í–ò–ù–ò üîû", "id": -1003039408421},
    {"name": "–ö–∏—ó–≤/–æ–±–ª.", "id": -1002851410256},
    {"name": "–•–∞—Ä–∫—ñ–≤/–æ–±–ª.", "id": -1003012571542},
    {"name": "–õ—å–≤—ñ–≤/–æ–±–ª.", "id": -1002969968192},
    {"name": "–í—ñ–Ω–Ω–∏—Ü—è/–æ–±–ª.", "id": -1002924468168},
    {"name": "–î–Ω—ñ–ø—Ä–æ/–æ–±–ª.", "id": -1003021264692},
    {"name": "–ó–∞–ø–æ—Ä—ñ–∂–∂—è/–æ–±–ª.", "id": -1002996278961},
    {"name": "–Ü–≤–∞–Ω–æ-–§—Ä–∞–Ω–∫—ñ–≤—Å—å–∫/–æ–±–ª.", "id": -1003006964132},
    {"name": "–†—ñ–≤–Ω–µ/–æ–±–ª.", "id": -1002945091264},
    {"name": "–•–º–µ–ª—å–Ω–∏—Ü—å–∫–∏–π/–æ–±–ª.", "id": -1002341809057},
    {"name": "–û–¥–µ—Å–∞/–æ–±–ª.", "id": -1002628002244},
    {"name": "–ß–µ—Ä–Ω—ñ–≥—ñ–≤/–æ–±–ª.", "id": -1002966898895},
    {"name": "–õ—É—Ü—å–∫/–æ–±–ª.", "id": -1002946058758},
    {"name": "–¢–µ—Ä–Ω–æ–ø—ñ–ª—å/–æ–±–ª.", "id": -1003073607738},
    {"name": "–ß–µ—Ä–Ω—ñ–≤—Ü—ñ/–æ–±–ª.", "id": -1002990168271},
    {"name": "–£–∂–≥–æ—Ä–æ–¥/–æ–±–ª.", "id": -1002895198278},
    {"name": "–ñ–∏—Ç–æ–º–∏—Ä/–æ–±–ª.", "id": -1002915977182},
    {"name": "–ß–µ—Ä–∫–∞—Å–∏/–æ–±–ª.", "id": -1002320247065},
    {"name": "–ú–∏–∫–æ–ª–∞—ó–≤/–æ–±–ª.", "id": -1003042812683},
    {"name": "–ü–æ–ª—Ç–∞–≤–∞/–æ–±–ª.", "id": -1002792112863},
    {"name": "–°—É–º–∏/–æ–±–ª.", "id": -1002933054536},
    {"name": "–ö—Ä–æ–ø–∏–≤–Ω–∏—Ü—å–∫–∏–π/–æ–±–ª.", "id": -1002968550135},
    {"name": "–•–µ—Ä—Å–æ–Ω/–æ–±–ª.", "id": -1003098702380},
    {"name": "–ö—Ä–∏–≤–∏–π –†—ñ–≥", "id": -1002816696144},
    {"name": "–ö—Ä–µ–º–µ–Ω—á—É–∫", "id": -1003060893497},
]

# -------------------- –†–∞–±–æ—Ç–∞ —Å JSON --------------------
def load_links():
    if os.path.exists(LINKS_FILE):
        with open(LINKS_FILE, "r", encoding="utf-8") as f:
            return json.load(f)
    return []

def save_links(links):
    with open(LINKS_FILE, "w", encoding="utf-8") as f:
        json.dump(links, f, ensure_ascii=False, indent=2)

# -------------------- –•–µ–Ω–¥–ª–µ—Ä –∫–æ–º–∞–Ω–¥ --------------------
@dp.message()
async def handle_commands(message: types.Message):
    text = message.text or ""

    # ---------------- –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Å—Å—ã–ª–∫–∏ ----------------
    if text.startswith("/newlink"):
        parts = text.split(maxsplit=1)
        if len(parts) < 2:
@@ -77,7 +78,7 @@

        save_links(created_links)

        # -------------------- –§–æ—Ä–º–∏—Ä—É–µ–º –≤—ã–≤–æ–¥ --------------------
        # ---------------- –§–æ—Ä–º–∏—Ä—É–µ–º –≤—ã–≤–æ–¥ ----------------
        output_lines = []

        # –ü–µ—Ä–≤–∞—è —Å—Å—ã–ª–∫–∞ –æ—Ç–¥–µ–ª—å–Ω–æ
@@ -97,6 +98,7 @@

        await message.answer("‚úÖ –í—Å–µ —Å—Å—ã–ª–∫–∏ —Å–æ–∑–¥–∞–Ω—ã –∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω—ã!")

    # ---------------- –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Å—Å—ã–ª–∫–∏ ----------------
    elif text.startswith("/alllinks"):
        saved_links = load_links()
        if not saved_links:
@@ -117,12 +119,12 @@

# -------------------- –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ --------------------
async def main():
    # –£–¥–∞–ª—è–µ–º webhook, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞
    # –£–¥–∞–ª—è–µ–º webhook –ø–µ—Ä–µ–¥ polling
    await bot.delete_webhook(drop_pending_updates=True)
    print("Webhook —É–¥–∞–ª—ë–Ω, –∑–∞–ø—É—Å–∫–∞–µ–º polling...")

    try:
        await dp.start_polling()
        await dp.start_polling(bot)
    finally:
        await bot.session.close()
